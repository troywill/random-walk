* [3/3] Create a new rails 4.0.0.rc1 application
  1. [X] Create a new application
     #+BEGIN_SRC sh
       rails new pedometer --database postgresql
     #+END_SRC
  2. [X] Install Devise 
        #+BEGIN_SRC sh
          gem install devise --version 3.0.0.rc --no-ri --no-rdoc 
        #+END_SRC
  3. [X] Set up database
     1. [X] [[file:../config/database.yml][config/database.yml]]
        #+BEGIN_SRC conf
          development:
            adapter: postgresql
            encoding: unicode
            database: pedometer_development
            pool: 5
            username: troy
            password: 
          
            # Connect on a TCP socket. Omitted by default since the client uses a
            # domain socket that doesn't need configuration. Windows does not have
            # domain sockets, so uncomment these lines.
            #host: localhost
          
            # The TCP port the server listens on. Defaults to 5432.
            # If your server runs on a different port number, change accordingly.
            #port: 5432
          
            # Schema search path. The server defaults to $user,public
            #schema_search_path: myapp,sharedapp,public
          
            # Minimum log levels, in increasing order:
            #   debug5, debug4, debug3, debug2, debug1,
            #   log, notice, warning, error, fatal, and panic
            # Defaults to warning.
            #min_messages: notice
          
          # Warning: The database defined as "test" will be erased and
          # re-generated from your development database when you run "rake".
          # Do not set this db to the same as development or production.
          test:
            adapter: postgresql
            encoding: unicode
            database: weight_test
            pool: 5
            username: troy
            password: 
          
          production:
            adapter: postgresql
            encoding: unicode
            database: pedometer_production
            pool: 5
            username: troy
            password: 
        #+END_SRC
     2. [X] rake db:create
  4. [X] Set the time zone file:../config/application.rb
     #+BEGIN_SRC sh
       rake -D time
       rake time:zones:us
     #+END_SRC
     #+BEGIN_SRC ruby
       config.time_zone = 'Pacific Time (US & Canada)'
     #+END_SRC
  2. [X] Create a “home” controller and a “home/index” page
     #+BEGIN_SRC sh
       rails generate controller home index --no-controller-specs --skip-stylesheets --skip-javascripts
     #+END_SRC
     - --skip-stylesheets --skip-javascripts to avoid cluttering our application with stylesheet and JavaScript files we don’t need.
  3. [X] Set the default route to home/index in file:../config/routes.rb
     #+BEGIN_SRC ruby
       root 'home#index'
     #+END_SRC
* [6/7] Create a User authentication system with Devise < see [[file:/troy@usahealthscience.com:/home/troy/srv/devise/128/emacs/emacs/step-by-step-devise.org][step-by-step-devise.org]] >
  1. [X] Enable `devise` gem in [[file:../Gemfile][Gemfile]]
     #+BEGIN_SRC conf
       gem 'devise', '~> 3.0.0.rc' # Wed May  8 18:03:54 PDT 2013, Rails 4.0.0.rc1
     #+END_SRC
  2. [X] bundle install
  3. [X] Run the Devise gem install generator
     #+BEGIN_SRC sh
       rails generate devise:install
     #+END_SRC
  4. [X] Generate a User Model and generate routes for user activities
     #+BEGIN_SRC sh
       rails generate devise User
     #+END_SRC
  5. [ ] Run the devise_create_users database migration the was created by in the previous command
     #+BEGIN_SRC sh
       rake db:migrate
     #+END_SRC
  6. [X] (Re)start the Rails server
     #+BEGIN_SRC 
       kill -USR1 `cat ../tmp/pids/server.pid `; rails server --daemon
     #+END_SRC
** (Optional) create a user from console
   #+BEGIN_SRC ruby
     User.new(:email => "user@name.com", :password => 'password', :password_confirmation => 'password').save
   #+END_SRC

* [3/6] Create "Steps" model, controller, and views ( note: pedometer is reserved )
  1. [X] Generate steps scaffold
     #+BEGIN_SRC sh :tangle bin/generate-scaffold-steps.sh :shebang #!/bin/sh
       rails generate scaffold steps user_id:integer steps:integer step_time:datetime
     #+END_SRC
  2. [ ] Relationship to User, validations
     file:../app/models/reading.rb
     #+BEGIN_SRC ruby
       belongs_to :user
       validates :user_id, :numericality => true
       validates :weight, :numericality => true
     #+END_SRC
  3. [ ] Migrate the database, i.e. rake db:migrate
  4. [ ] file:../app/views/layouts/_navigation.html.erb
     #+BEGIN_SRC html
         <li><%= link_to "New reading", new_reading_path %></li>
         <li><%= link_to "See all readings", readings_path %></li>
     #+END_SRC
  5. [X] [100%] User ID on new Reading
     1. [X] Add user id to create method in readings controller file:../app/controllers/readings_controller.rb
	#+BEGIN_SRC ruby
          def create
            @reading = Reading.new(reading_params)
            @reading.user_id = current_user.id
        #+END_SRC
        - note that @user comes from application controller, identify_user method
     2. [X] Remove user id field from file:../app/views/readings/_form.html.erb
  
  6. [X] Place sign up and sign out links on the home page file:../app/views/home/index.html.erb
     #+BEGIN_SRC html
       <h1>Home#index</h1>
       <%= Time.now %>
       <li><%= link_to "Sign Up", new_user_registration_path %></li>
       <li><%= link_to "Sign In", new_user_session_path %></li>
       <li><%= link_to "Sign Out", destroy_user_session_path, :method => 'delete' %></li>
       
       <% if user_signed_in? %>
       You are signed in, current_user.id = <%= current_user.id %><br />
       user_session.keys => <%= user_session.keys %>
       <% end %>
     #+END_SRC
     - To verify if a user is signed in, use the following helper: user_signed_in?
     - See https://github.com/plataformatec/devise#controller-filters-and-helpers
     - file:../app/views/home/index.html.erb
     - For the current signed-in user, this helper is available: current_user
   
* TODO Create Goal model, controller, and views
  1. [X] Generate scaffold
     #+BEGIN_SRC sh :tangle bin/generate-scaffold-goal.sh :shebang #!/bin/sh
       rails generate scaffold goal user_id:integer \
           goal_steps:integer \
           goal_finish_time:datetime \
           goal_start_time:datetime
     #+END_SRC
  2. [X] Relationship between Goal and User file:../app/models/goal.rb
     #+BEGIN_SRC ruby
       class Setting < ActiveRecord::Base
         belongs_to :user
       ...
     #+END_SRC
  3. [ ] Relationship between User and Goal file:../app/models/user.rb
     #+BEGIN_SRC ruby
       class User < ActiveRecord::Base
         has_one :setting
         has_many :goals
     #+END_SRC
  4. [ ] Default values file:../db/migrate/ 2013xxx_create_goals.rb
     #+BEGIN_SRC ruby
       t.integer :goal_loss_rate, :default => 0
     #+END_SRC
  5. [ ] Validations file:../app/models/goal.rb
     #+BEGIN_SRC ruby
       validates :user_id, :presence => true, :numericality => true
       validates :goal_loss_rate, :presence => true, :numericality => true
     #+END_SRC
  6. [ ] Migrate database
  7. [ ] user_id file:../app/controllers/goals_controller.rb
     #+BEGIN_SRC ruby
       # POST /goals
       # POST /goals.json
       def create
         @goal = Goal.new(goal_params)
         @goal.user_id = current_user.id # current_user provided by Devise
     #+END_SRC
  8. [ ] update form file:../app/views/goals/_form.html.erb
  9. [ ] navigation file:../app/views/layouts/_navigation.html.erb
     #+BEGIN_SRC html
       <li><%= link_to "Goals", goals_path %></li>
     #+END_SRC
* TODO Write last class functions in step model
  1. [X] goal_now in Step model file:../app/models/goal.rb
     #+BEGIN_SRC ruby

  def self.goal_now(user)
    goal = Goal.where(:user_id => user.id).last
    total_duration = goal.goal_finish_time - goal.goal_start_time
    elapsed_time = Time.now - goal.goal_start_time
    #         goal.goal_steps
    steps_now_goal_now = goal.goal_steps * ( elapsed_time / total_duration )
  end
     #+END_SRC
  2. [ ] file:../app/views/home/index.html.erb
     <h1>Goal now <%= number_with_precision(Goal.goal_now(current_user), :precision => 3)%></h1>
     <h1>Goal now <%= Goal.goal_now(current_user) %></h1>


* TODO Home/index

* 6 AM to 6 PM
  #+BEGIN_SRC ruby :tangle bin/steps.now.rb :shebang #!/usr/bin/env ruby

    def seconds_since_midnight(time)
      return time.hour * 3600 + time.min * 60 + time.sec
    end

    def steps_per_second
      hours = 14
      steps = 20000
      return ( 20000.0 / ( 14.0 * 3600.0 ) )
    end

    def steps(time)
      seconds_since_six = seconds_since_midnight(time) - 7.5 * 3600
      step_rate = steps_per_second
      steps = seconds_since_six * step_rate
      puts steps
    end

    steps(Time.now)
  #+END_SRC
